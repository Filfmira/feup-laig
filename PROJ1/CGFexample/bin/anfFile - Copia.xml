<anf>

    <!-- bloco de configuracoes globais -->
    <!-- a declaracao dos componentes deste bloco e' obrigatoria -->
    <globals>
        <!-- Parametros de desenho -->
        <!-- Valores para mode: "fill" , "line", "point" -->
        <!-- Valores para shading: "flat", "gouraud" ) -->
        <drawing mode="fill" shading="gouraud" background="0.5 0.2 0.1 0.8" />
 
        <!-- Parametros de culling -->
        <!-- Valores para cullface: "none", "back" , "front" ou "both" -->
        <!-- Valores para cullorder : "ccw" ou "cw" -->
        <culling face="back" order="ccw" />
 
        <!-- Parametros de iluminacao; seguem os parametros do OpenGL  -->
        <lighting doublesided="true" local="false" enabled="true" ambient="0.8 0.8 0.8 0.8" />
 
    </globals>

    <!-- bloco de camaras: o atributo "initial" identifica a camara/ponto de vista inicial, que tem de existir -->
    <cameras initial="ss" >
        <!-- tem de existir, pelo menos uma camara dos tipos seguintes (perspective ou ortho) -->
        <!-- no caso da camara ortho, o atributo "direction" define o eixo segundo o qual se efetua a projecao -->

        <perspective id="ss" near="ff" far="ff" angle="ff" pos="ff ff ff" target="ff ff ff" />
        <ortho id="ss" direction="ee" near="ff" far="ff" left="ff" right="ff" top="ff" bottom="ff" />

    </cameras>

 <!-- bloco de luzes -->
    <lights>
            <!-- Deve existir pelo menos uma luz declarada -->
            <!-- Atributo "marker" indica se deve ou nao desenhar-se uma esfera representativa -->
            <light id="ss" type="omni" enabled="tt" marker="tt" pos="ff ff ff" >
               <component type="ambient" value="ff ff ff ff" />
               <component type="diffuse" value="ff ff ff ff" />
               <component type="specular" value="ff ff ff ff" />

            </light>

            <light id="ss" type="spot" enabled="tt" marker="tt" pos="ff ff ff" target="ff ff ff" 
                angle="ff" exponent="ff" >

               <component type="ambient" value="ff ff ff ff" />
               <component type="diffuse" value="ff ff ff ff" />
               <component type="specular" value="ff ff ff ff" />

            </light>
    </lights>

    <!-- bloco de texturas. Este bloco tem de existir mas pode estar vazio, se nao forem usadas texturas -->
    <!--   ver topico 'Notas finais' no enunciado sobre os parametros texlength_... -->
    <textures>      
          <texture id="ss" file="ss" texlength_s="ff" texlength_t="ff" />
    </textures>

    <!-- bloco de materiais; -->
    <appearances>
        <!-- deve existir um ou mais blocos "appearance" -->
        <!-- IMPORTANTE: -->
        <!--   textureref e opcional, a utilizar caso haja textura associada a esta aparencia -->
        <appearance id="ss" shininess="1" textureref="ss" >
               <component type="ambient" value="1 1 1 1" />
               <component type="diffuse" value="1 1 1 1" />
               <component type="specular" value="1 1 1 1" />
        </appearance>
		<appearance id="ss" shininess="1" textureref="ss" >
               <component type="ambient" value="1 1 1 1" />
               <component type="diffuse" value="1 1 1 1" />
        </appearance>
    </appearances>

    <!-- bloco do grafo; "rootid" identifica o no de raiz -->
    <graph rootid="root">

        <!-- tem de existir, pelo menos, um bloco "node" -->
        <node id="root">
            <!-- bloco "transforms" obrigatorio -->
            <transforms>
                <!-- deve conter transformacoes explicitas usando as instrucoes seguintes sem limite nem ordem -->
                <!-- ex: bloco transforms pode ficar sem conteudo -->
                <!-- ex: bloco transforms pode ser R,T (nao tem S) -->
                <!-- ex: bloco transforms pode ser R,S,T,S -->
                <transform type="translate" to="1 1 0" />
           <!--     <transform type="rotate" axis="xx" angle="90" />
                <transform type="scale" factor="2.1 1 5" /> -->
            </transforms>
         
            <!-- declaracao da aparencia a utilizar -->
            <!-- se id="inherit", o no' mantem (herda) a aparencia do "pai" -->

            <appearanceref id="ss" />
 
                             
             <!-- conteudo do no; deve existir pelo menos um bloco "primitives" ou um "descendants" -->
             <!-- podem existir ambos -->

             <!-- bloco "primitives" -->
            <primitives>
                <!-- podem existir varias primitivas -->

                <!-- Primitivas : rectangle, triangle, cylinder, sphere, torus -->
                <!--   Comandos a serem interpretados genericamente como em OpenGL/GLUT, exceto -->
                <!--   o cilindro, que deve adicionalmente ter topos ou tampas) -->           
                <rectangle xy1="-1 1" xy2="1 -1" />
                <triangle xyz1="0 2.5 0" xyz2="-1.5 1 0" xyz3="1.5 1 0" />
                <!-- <cylinder base="1" top="1" height="3" slices="20" stacks="10" />
               <!-- <sphere radius="ff" slices="ii" stacks="ii" />
                <torus inner="ff" outer="ff" slices="ii" loops="ii" /> -->
             </primitives>
              
             <!-- bloco "descendants" -->
            <descendants>
                <!-- Referencia a outros elementos do grafo -->
                <!-- (repetir o no. de vezes necessario) -->
                <!-- LEMBRANDO: qualquer no' pode ser referenciado previamente 'a sua declaracao; isto -->
                <!--            e', a ordem pela qual os nos sao declarados e' irrelevante -->

               

            </descendants>
        </node>


        <node id="cilindro teste">
            <transforms>
                <transform type="rotate" axis="yy" angle="90"/>
            </transforms>

            <appearanceref id="ss" />

            <primitives>
                <cylinder base="1" top="1" height="3" slices="20" stacks="10" />
            </primitives>

            <descendants>
            </descendants>

        </node>

		
    </graph>
</anf>